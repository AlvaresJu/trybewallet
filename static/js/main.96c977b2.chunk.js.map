{"version":3,"sources":["redux/actions/loginActions.js","components/Logo.js","pages/Login.js","redux/actions/walletActions.js","components/Header.js","components/Table.js","components/WalletForm.js","components/Loading.js","pages/Wallet.js","App.js","redux/reducers/user.js","redux/reducers/wallet.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["USER_LOGIN","Logo","className","this","props","Component","Login","handleEmailChange","value","target","isValidEmail","test","setState","email","validEmail","handlePasswordChange","isValidPassword","length","validPassword","handleSubmit","event","preventDefault","history","registerEmail","state","push","type","placeholder","onChange","disabled","onClick","React","connect","dispatch","getUserEmail","REQUEST_DATA","FAILED_REQUEST","GET_CURRENCIES","ADD_EXPENSE","REMOVE_EXPENSE","EDIT_EXPENSE","SAVE_EDITED_EXPENSE","CHANGE_INPUT","TIMEOUT","requestData","failedRequest","requestError","addExpense","expense","valueBRL","Header","loggedEmail","totalExpense","toFixed","user","wallet","Table","handleRemoveExpense","id","currency","exchangeRates","removeExpenseItem","ask","handleEditExpense","expenseToEdit","enableExpenseEditing","description","method","tag","expenses","map","key","Number","name","idToRemove","valueToRemove","removeExpense","idToEdit","inputsToEdit","startEditingExpense","WalletForm","handleAddExpense","addExpenseItem","formData","handleSaveEdited","editExpenseItem","prevData","find","valueToSub","valueToAdd","currencies","editor","handleChange","htmlFor","min","element","expenseData","fetch","request","json","requestResult","status","Error","code","message","setTimeout","console","log","editedData","subValue","addValue","saveEditedExpense","input","inputValue","handleFormChange","Loading","color","height","width","Wallet","getCurrencies","loading","currencyList","Object","keys","filter","App","path","component","exact","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.96c977b2.chunk.js","sourcesContent":["// Coloque aqui suas actions\nexport const USER_LOGIN = 'USER_LOGIN';\n\nexport const getUserEmail = (email) => ({\n  type: USER_LOGIN,\n  email,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BsCashCoin, BsWallet2 } from 'react-icons/bs';\n\nclass Logo extends Component {\n  render() {\n    const { className } = this.props;\n    return (\n      <h1 className={ className }>\n        <BsWallet2 />\n        <BsCashCoin />\n        {' '}\n        TrybeWallet\n      </h1>\n    );\n  }\n}\n\nLogo.propTypes = {\n  className: PropTypes.string.isRequired,\n};\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getUserEmail } from '../redux/actions/loginActions';\nimport Logo from '../components/Logo';\nimport '../styles/login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      validEmail: false,\n      validPassword: false,\n    };\n  }\n\n  handleEmailChange = ({ target }) => {\n    const { value } = target;\n    const isValidEmail = (/\\S+@\\S+\\.\\S+/).test(value);\n    this.setState({ email: value, validEmail: isValidEmail });\n  }\n\n  handlePasswordChange = ({ target }) => {\n    const { value } = target;\n    const minLenghtPassword = 6;\n    const isValidPassword = value.length >= minLenghtPassword;\n    this.setState({ validPassword: isValidPassword });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { history, registerEmail } = this.props;\n    const { email } = this.state;\n    registerEmail(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, validEmail, validPassword } = this.state;\n    return (\n      <div className=\"login-container\">\n        <form className=\"login-form\">\n          <Logo className=\"large-logo\" />\n          <input\n            type=\"email\"\n            data-testid=\"email-input\"\n            placeholder=\"E-mail\"\n            value={ email }\n            onChange={ this.handleEmailChange }\n          />\n          <input\n            type=\"password\"\n            data-testid=\"password-input\"\n            placeholder=\"Senha\"\n            onChange={ this.handlePasswordChange }\n          />\n          <button\n            type=\"submit\"\n            data-testid=\"login-submit-button\"\n            disabled={ !(validEmail && validPassword) }\n            onClick={ this.handleSubmit }\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  registerEmail: (email) => dispatch(getUserEmail(email)),\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  registerEmail: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","// Coloque aqui suas actions\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const FAILED_REQUEST = 'FAILED_REQUEST';\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const SAVE_EDITED_EXPENSE = 'SAVE_EDITED_EXPENSE';\nexport const CHANGE_INPUT = 'CHANGE_INPUT';\n\nconst TIMEOUT = 500;\n\nconst requestData = () => ({ type: REQUEST_DATA });\n\nconst failedRequest = (requestError) => ({\n  type: FAILED_REQUEST,\n  requestError,\n});\n\nconst getCurrencies = (currencies) => ({\n  type: GET_CURRENCIES,\n  currencies,\n});\n\nexport const fetchCurrencies = () => async (dispatch) => {\n  dispatch(requestData());\n  try {\n    const request = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const requestResult = await request.json();\n    if (requestResult.status) {\n      throw new Error(`${requestResult.code}: ${requestResult.message}`);\n    } else {\n      const currencyList = Object.keys(requestResult).filter((type) => type !== 'USDT');\n      setTimeout(() => {\n        dispatch(getCurrencies(currencyList));\n      }, TIMEOUT);\n    }\n  } catch (error) {\n    setTimeout(() => {\n      dispatch(failedRequest(error.message));\n      console.log(error.message);\n    }, TIMEOUT);\n  }\n};\n\nconst addExpense = (expense, valueBRL) => ({\n  type: ADD_EXPENSE,\n  expense,\n  valueBRL,\n});\n\nexport const fetchDataAndAddExpense = (expenseData) => async (dispatch) => {\n  dispatch(requestData());\n  try {\n    const request = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const requestResult = await request.json();\n    if (requestResult.status) {\n      throw new Error(`${requestResult.code}: ${requestResult.message}`);\n    } else {\n      const expense = { ...expenseData, exchangeRates: requestResult };\n      const { value, currency } = expenseData;\n      const valueBRL = value * requestResult[currency].ask;\n      setTimeout(() => {\n        dispatch(addExpense(expense, valueBRL));\n      }, TIMEOUT);\n    }\n  } catch (error) {\n    setTimeout(() => {\n      dispatch(failedRequest(error.message));\n      console.log(error.message);\n    }, TIMEOUT);\n  }\n};\n\nexport const removeExpense = (idToRemove, valueToRemove) => ({\n  type: REMOVE_EXPENSE,\n  idToRemove,\n  valueToRemove,\n});\n\nexport const startEditingExpense = (idToEdit, inputsToEdit) => ({\n  type: EDIT_EXPENSE,\n  idToEdit,\n  inputsToEdit,\n});\n\nexport const saveEditedExpense = (editedData, subValue, addValue) => ({\n  type: SAVE_EDITED_EXPENSE,\n  editedData,\n  subValue,\n  addValue,\n});\n\nexport const handleFormChange = ({ target }) => ({\n  type: CHANGE_INPUT,\n  input: target.id,\n  inputValue: target.value,\n});\n","import React, { Component } from 'react';\nimport { ImMail4 } from 'react-icons/im';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FcCurrencyExchange } from 'react-icons/fc';\nimport Logo from './Logo';\nimport '../styles/header.css';\n\nclass Header extends Component {\n  render() {\n    const { loggedEmail, totalExpense } = this.props;\n    return (\n      <header>\n        <Logo className=\"medium-logo\" />\n        <div className=\"total-expense-container\">\n          <FcCurrencyExchange />\n          <span>\n            <strong>Tota de despesas:</strong>\n            {' '}\n            R$\n            {' '}\n          </span>\n          <span data-testid=\"total-field\">\n            { totalExpense.toFixed(2) }\n          </span>\n          <span data-testid=\"header-currency-field\">BRL</span>\n        </div>\n        <div className=\"email-container\">\n          <ImMail4 />\n          <span data-testid=\"email-field\">{ loggedEmail }</span>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loggedEmail: state.user.email,\n  totalExpense: state.wallet.totalExpense,\n});\n\nHeader.propTypes = {\n  loggedEmail: PropTypes.string.isRequired,\n  totalExpense: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FiEdit } from 'react-icons/fi';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { removeExpense, startEditingExpense } from '../redux/actions/walletActions';\nimport '../styles/table.css';\n\nclass Table extends Component {\n  handleRemoveExpense = ({ id, value, currency, exchangeRates }) => {\n    const { removeExpenseItem } = this.props;\n    const valueToRemove = value * exchangeRates[currency].ask;\n    removeExpenseItem(id, valueToRemove);\n  }\n\n  handleEditExpense = (expenseToEdit) => {\n    const { enableExpenseEditing } = this.props;\n    const { id, value, description, currency, method, tag } = expenseToEdit;\n    const inputsToEdit = { value, description, currency, method, tag };\n    enableExpenseEditing(id, inputsToEdit);\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div className=\"expenses-table\">\n        <table>\n          <caption>Lista de Despesas</caption>\n          <thead className=\"table-tr\">\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            { (expenses.length > 0) && expenses.map((expense) => {\n              const { id,\n                value,\n                description,\n                currency,\n                method,\n                tag,\n                exchangeRates } = expense;\n              return (\n                <tr key={ id }>\n                  <td>{description}</td>\n                  <td>{tag}</td>\n                  <td>{method}</td>\n                  <td>{Number(value).toFixed(2)}</td>\n                  <td>{exchangeRates[currency].name}</td>\n                  <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n                  <td>{Number(value * exchangeRates[currency].ask).toFixed(2)}</td>\n                  <td>Real</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      data-testid=\"edit-btn\"\n                      className=\"edit-btn\"\n                      onClick={ () => this.handleEditExpense(expense) }\n                    >\n                      <FiEdit />\n                    </button>\n                    <button\n                      type=\"button\"\n                      data-testid=\"delete-btn\"\n                      className=\"delete-btn\"\n                      onClick={ () => this.handleRemoveExpense(expense) }\n                    >\n                      <MdDeleteForever />\n                    </button>\n                  </td>\n                </tr>\n              );\n            }) }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpenseItem:\n    (idToRemove, valueToRemove) => dispatch(removeExpense(idToRemove, valueToRemove)),\n  enableExpenseEditing:\n    (idToEdit, inputsToEdit) => dispatch(startEditingExpense(idToEdit, inputsToEdit)),\n});\n\nTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  removeExpenseItem: PropTypes.func.isRequired,\n  enableExpenseEditing: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchDataAndAddExpense,\n  handleFormChange,\n  saveEditedExpense } from '../redux/actions/walletActions';\nimport '../styles/walletForm.css';\n\nclass WalletForm extends Component {\n  handleAddExpense = (event) => {\n    event.preventDefault();\n    const { expenses, addExpenseItem, formData } = this.props;\n    const id = (expenses.length > 0) ? (expenses[expenses.length - 1].id + 1) : 0;\n    const expenseData = { id, ...formData };\n    addExpenseItem(expenseData);\n  }\n\n  handleSaveEdited = (event) => {\n    event.preventDefault();\n    const { expenses, idToEdit, formData, editExpenseItem } = this.props;\n    const prevData = expenses.find(({ id }) => id === idToEdit);\n    const valueToSub = prevData.value * prevData.exchangeRates[prevData.currency].ask;\n    const valueToAdd = formData.value * prevData.exchangeRates[formData.currency].ask;\n    const editedExpenseData = { id: idToEdit, ...formData };\n    editExpenseItem(editedExpenseData, valueToSub, valueToAdd);\n  }\n\n  render() {\n    const { currencies, editor, formData, handleChange } = this.props;\n    const { value, description, currency, method, tag } = formData;\n    return (\n      <form className=\"wallet-form\">\n        <h3>Cadastro de Despesa</h3>\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            type=\"number\"\n            data-testid=\"value-input\"\n            id=\"value\"\n            min={ 0 }\n            value={ value }\n            onChange={ handleChange }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            data-testid=\"currency-input\"\n            id=\"currency\"\n            value={ currency }\n            onChange={ handleChange }\n          >\n            {\n              (currencies.length > 0)\n                && currencies.map((element) => <option key={ element }>{element}</option>)\n            }\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de pagamento:\n          <select\n            data-testid=\"method-input\"\n            id=\"method\"\n            value={ method }\n            onChange={ handleChange }\n          >\n            <option>Dinheiro</option>\n            <option>Cartão de crédito</option>\n            <option>Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Categoria:\n          <select\n            data-testid=\"tag-input\"\n            id=\"tag\"\n            value={ tag }\n            onChange={ handleChange }\n          >\n            <option>Alimentação</option>\n            <option>Lazer</option>\n            <option>Trabalho</option>\n            <option>Transporte</option>\n            <option>Saúde</option>\n          </select>\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            type=\"text\"\n            data-testid=\"description-input\"\n            id=\"description\"\n            value={ description }\n            onChange={ handleChange }\n          />\n        </label>\n        { editor ? (\n          <button type=\"submit\" onClick={ this.handleSaveEdited }>\n            Editar despesa\n          </button>\n        ) : (\n          <button type=\"submit\" onClick={ this.handleAddExpense }>\n            Adicionar despesa\n          </button>\n        ) }\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  editor: state.wallet.editor,\n  idToEdit: state.wallet.idToEdit,\n  formData: state.wallet.formData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpenseItem: (expense) => dispatch(fetchDataAndAddExpense(expense)),\n  editExpenseItem: (editedData, subValue, addValue) => dispatch(\n    saveEditedExpense(editedData, subValue, addValue),\n  ),\n  handleChange: (event) => dispatch(handleFormChange(event)),\n});\n\nWalletForm.propTypes = {\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editor: PropTypes.bool.isRequired,\n  idToEdit: PropTypes.number.isRequired,\n  formData: PropTypes.objectOf(PropTypes.string).isRequired,\n  addExpenseItem: PropTypes.func.isRequired,\n  editExpenseItem: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletForm);\n","import React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\nimport '../styles/loading.css';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"loading-content\">\n        <ReactLoading\n          type=\"spin\"\n          color=\"#540b0e\"\n          height={ 70 }\n          width={ 110 }\n          className=\"loading-icon\"\n        />\n        <h1>Carregando...</h1>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies } from '../redux/actions/walletActions';\nimport Header from '../components/Header';\nimport Table from '../components/Table';\nimport WalletForm from '../components/WalletForm';\nimport '../styles/wallet.css';\nimport Loading from '../components/Loading';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    const { loading } = this.props;\n    if (loading) return <Loading />;\n    return (\n      <div className=\"wallet-content\">\n        <WalletForm />\n        <div className=\"header-table\">\n          <Header />\n          <Table />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.wallet.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(fetchCurrencies()),\n});\n\nWallet.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/carteira\" component={ Wallet } />\n      <Route exact path=\"/\" component={ Login } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { USER_LOGIN } from '../actions/loginActions';\n\nconst INITIAL_STATE = {\n  email: '', // string que armazena o email da pessoa usuária\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case USER_LOGIN:\n    return ({ ...state, email: action.email });\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { REQUEST_DATA,\n  FAILED_REQUEST,\n  GET_CURRENCIES,\n  ADD_EXPENSE,\n  REMOVE_EXPENSE,\n  EDIT_EXPENSE,\n  SAVE_EDITED_EXPENSE,\n  CHANGE_INPUT } from '../actions/walletActions';\n\nconst INITIAL_STATE = {\n  currencies: [], // array de string\n  expenses: [], // array de objetos, com cada objeto tendo as chaves id, value, currency, method, tag, description e exchangeRates\n  editor: false, // valor booleano que indica se uma despesa está sendo editada\n  idToEdit: 0,\n  loading: false,\n  requestError: '',\n  totalExpense: 0,\n  formData: {\n    value: '',\n    description: '',\n    currency: 'USD',\n    method: 'Dinheiro',\n    tag: 'Alimentação',\n  },\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_DATA:\n    return { ...state, loading: true };\n  case FAILED_REQUEST:\n    return { ...state, loading: false, requestError: action.requestError };\n  case GET_CURRENCIES:\n    return { ...state, loading: false, currencies: action.currencies };\n  case ADD_EXPENSE:\n    return { ...state,\n      loading: false,\n      expenses: [...state.expenses, action.expense],\n      totalExpense: (state.totalExpense + action.valueBRL),\n      formData: { ...state.formData, value: '', description: '' } };\n  case REMOVE_EXPENSE:\n    return { ...state,\n      expenses: state.expenses.filter(({ id }) => id !== action.idToRemove),\n      totalExpense: (action.valueToRemove > state.totalExpense) ? 0\n        : (state.totalExpense - action.valueToRemove) };\n  case EDIT_EXPENSE:\n    return { ...state,\n      editor: true,\n      idToEdit: action.idToEdit,\n      formData: { ...state.formData, ...action.inputsToEdit } };\n  case SAVE_EDITED_EXPENSE:\n    return { ...state,\n      editor: false,\n      expenses: state.expenses.map((expense) => {\n        if (expense.id !== action.editedData.id) return expense;\n        return { id: expense.id,\n          value: action.editedData.value,\n          description: action.editedData.description,\n          currency: action.editedData.currency,\n          method: action.editedData.method,\n          tag: action.editedData.tag,\n          exchangeRates: expense.exchangeRates };\n      }),\n      totalExpense: (state.totalExpense - action.subValue + action.addValue),\n      formData: { ...state.formData, value: '', description: '' } };\n  case CHANGE_INPUT:\n    return { ...state,\n      formData: { ...state.formData, [action.input]: action.inputValue } };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({\n  user,\n  wallet,\n});\n\nexport default rootReducer;\n","// configure aqui sua store\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={ process.env.PUBLIC_URL }>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}